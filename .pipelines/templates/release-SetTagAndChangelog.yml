jobs:
- job: setTagAndChangelog
  displayName: Set Tag and Upload Changelog
  condition: succeeded()
  pool:
    type: windows
  variables:
  - group: 'mscodehub-code-read-akv'
  - name: ob_outputDirectory
    value: '$(Build.ArtifactStagingDirectory)/ONEBRANCH_ARTIFACT'
  - name: ob_sdl_credscan_suppressionsFile
    value: $(Build.SourcesDirectory)\PowerShell\.config\suppress.json
  - name: ob_sdl_tsa_configFile
    value: $(Build.SourcesDirectory)\PowerShell\.config\tsaoptions.json
  steps:
  - template: release-SetReleaseTagandContainerName.yml@self

  - checkout: self
    clean: true
    env:
      ob_restore_phase: true

  - pwsh: |
      # Upload changelog file to the artifact directory
      Write-Verbose -Verbose "Release Tag: $(OutputReleaseTag.releaseTag)"
      $releaseVersion = '$(OutputReleaseTag.releaseTag)' -replace '^v',''
      Write-Verbose -Verbose "Release Version: $releaseVersion"
      $semanticVersion = [System.Management.Automation.SemanticVersion]$releaseVersion

      $isPreview = $semanticVersion.PreReleaseLabel -ne $null

      $fileName = if ($isPreview) {
        "preview.md"
      }
      else {
        $semanticVersion.Major.ToString() + "." + $semanticVersion.Minor.ToString() + ".md"
      }

      $filePath = "$(Build.SourcesDirectory)/PowerShell/CHANGELOG/$fileName"
      Write-Verbose -Verbose "Selected Log file: $filePath"

      if (-not (Test-Path -Path $filePath)) {
        Write-Error "Changelog file not found: $filePath"
        exit 1
      }
      
      Write-Verbose -Verbose "Creating output directory for CHANGELOG: $(ob_outputDirectory)/CHANGELOG"
      New-Item -Path $(ob_outputDirectory)/CHANGELOG -ItemType Directory -Force
      Copy-Item -Path $filePath -Destination $(ob_outputDirectory)/CHANGELOG

      # Determine LTS, Preview, or Stable
      $metadata = Get-Content "$repoRoot/tools/metadata.json" -Raw | ConvertFrom-Json
      $LTS = $metadata.LTSRelease.Latest
      $Stable = $metadata.StableRelease.Latest

      $IsLTS = [bool]$LTS
      $IsStable = [bool]$Stable
      $IsPreview = [bool]$isPreview

      $channelVars = @{
          IsLTS     = $IsLTS
          IsStable  = $IsStable
          IsPreview = $IsPreview
      }

      $trueCount = ($channelVars.Values | Where-Object { $_ }) | Measure-Object | Select-Object -ExpandProperty Count
      if ($trueCount -gt 1) {
          Write-Error "Only one of IsLTS, IsStable, or IsPreview can be true. Current values: IsLTS=$IsLTS, IsStable=$IsStable, IsPreview=$IsPreview"
          exit 1
      }

      foreach ($name in $channelVars.Keys) {
          $value = if ($channelVars[$name]) { 'true' } else { 'false' }
          Write-Verbose -Message "Setting $name variable: $value" -Verbose
          Write-Host "##vso[task.setvariable variable=$name;isOutput=true]$value"
      }

    name: ChannelSelection
    displayName: Upload Changelog and Determine LTS, Preview, or Stable
